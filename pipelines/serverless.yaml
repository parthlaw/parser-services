service: "parser-pipelines"

package:
  patterns:
    - ./**/*.py
    - ./**/*.ts
    - ./**/*.js
    - ./**/*.yaml
  exclude:
    - node_modules/**
    - venv/**
    - __pycache__/**

provider:
  name: aws
  region: ap-south-1
  profile: personal
  versionFunctions: false
  timeout: 29
  environment:
    # Logging Configuration
    LOG_LEVEL: ${self:custom.logLevel.${sls:stage}, self:custom.logLevel.default}
    # Supabase Configuration
    SUPABASE_URL: ${self:custom.secrets.SUPABASE_URL}
    SUPABASE_ANON_KEY: ${self:custom.secrets.SUPABASE_ANON_KEY}


  httpApi:
    cors:
      allowedOrigins: ['*']
      allowedHeaders:
        - Content-Type
        - Authorization
        - X-Amz-Date
        - X-Api-Key
        - X-Amz-Security-Token
        - X-Amz-User-Agent
      allowedMethods:
        - GET
        - POST
        - OPTIONS
      exposedResponseHeaders:
        - Special-Response-Header
      maxAge: 86400  # 24 hours

  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'secretsmanager:GetSecretValue'
            - ssm:GetParameter
            - ssm:GetParameters
 
          Resource:
            - 'arn:aws:secretsmanager:${aws:region}:${aws:accountId}:secret:parser-service-*'
            - 'arn:aws:ssm:${aws:region}:${aws:accountId}:parameter/parser-service-*'
        - Effect: 'Allow'
          Action:
            - 's3:*'
          Resource:
            - 'arn:aws:s3:::*'
        - Effect: 'Allow'
          Action:
            - "sqs:ReceiveMessage"
            - "sqs:DeleteMessage"
            - "sqs:GetQueueAttributes"
          Resource:
            - arn:aws:sqs:ap-south-1:851725386253:parser-service-dev-queue.fifo
            - arn:aws:sqs:ap-south-1:851725386253:parser-service-prod-queue.fifo
        - Effect: 'Allow'
          Action:
            - "cloudwatch:PutMetricData"
          Resource:
            - "*"
        - Effect: 'Allow'
          Action:
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:Query
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/*
            - arn:aws:dynamodb:${self:provider.region}:*:table/*/index/*




custom:
  bucketName: parser-service-uploads
  pythonRequirements:
    dockerizePip: true
  queueName: parser-service-${sls:stage}-queue.fifo
  serverless-offline:
    httpPort: 4000
  secretsManagerSecretName: parser-service
  secrets: ${ssm:/aws/reference/secretsmanager/parser-service}
  logLevel:
    prod: INFO
    staging: DEBUG
    dev: DEBUG
    default: DEBUG

functions:
  parse-pdf:
    runtime: python3.12
    handler: bank-statement-parser/handler.main
    timeout: 900
    layers:
      - arn:aws:lambda:ap-south-1:770693421928:layer:Klayers-p312-pdfplumber:8
      - arn:aws:lambda:ap-south-1:770693421928:layer:Klayers-p312-pyyaml:1
      - arn:aws:lambda:ap-south-1:770693421928:layer:Klayers-p312-fuzzywuzzy:6
      - arn:aws:lambda:ap-south-1:851725386253:layer:xlsxwriter:1
      - arn:aws:lambda:ap-south-1:770693421928:layer:Klayers-p312-numpy:11 
    events:
      - sqs:
          arn: arn:aws:sqs:ap-south-1:851725386253:${self:custom.queueName}
          batchSize: 1
    environment:
      STAGE: ${sls:stage}
      BUCKET_NAME: ${self:custom.bucketName}

plugins:
  - serverless-offline
