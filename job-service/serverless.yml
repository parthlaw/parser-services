service: job-service

provider:
  name: aws
  runtime: nodejs18.x
  versionFunctions: false
  stage: ${opt:stage, 'dev'}
  region: "ap-south-1"
  memorySize: 512
  timeout: 30
  httpApi:
    cors:
      allowedOrigins:
        - http://localhost:3000
        - https://localhost:3000
        - https://bankstatements2excel.com
        - https://www.bankstatements2excel.com
      allowedHeaders:
        - Content-Type
        - Authorization
        - X-Amz-Date
        - X-Api-Key
        - X-Amz-Security-Token
        - X-Amz-User-Agent
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - PATCH
        - OPTIONS
      allowCredentials: true
  environment:
    NODE_ENV: ${self:provider.stage}
    API_VERSION: ${env:API_VERSION, 'v1'}
    JOBS_TABLE_NAME: jobs # same table for both dev and prod
    # Logging Configuration
    LOG_LEVEL: ${self:custom.logLevel.${sls:stage}, self:custom.logLevel.default}
    # JWT Configuration
    JWT_SECRET: ${self:custom.secrets.JWT_SECRET}
    JWT_ALGORITHM: ${self:custom.secrets.JWT_ALGORITHM, 'HS256'}
    # Supabase Configuration
    SUPABASE_URL: ${self:custom.secrets.SUPABASE_URL}
    SUPABASE_ANON_KEY: ${self:custom.secrets.SUPABASE_ANON_KEY}
    STAGE: ${sls:stage}
    BUCKET_NAME: ${self:custom.bucketName}
    QUEUE_NAME: ${self:custom.queueName}



  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: '*'
        - Effect: Allow
          Action:
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:DescribeTable
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/*
            - arn:aws:dynamodb:${self:provider.region}:*:table/*/index/*
        - Effect: 'Allow'
          Action:
            - 'secretsmanager:GetSecretValue'
            - ssm:GetParameter
            - ssm:GetParameters
          Resource:
            - 'arn:aws:secretsmanager:${aws:region}:${aws:accountId}:secret:parser-service-*'
            - 'arn:aws:ssm:${aws:region}:${aws:accountId}:parameter/parser-service-*'
        - Effect: 'Allow'
          Action:
            - 's3:*'
          Resource:
            - 'arn:aws:s3:::*'
        - Effect: 'Allow'
          Action:
            - "sqs:SendMessage"
            - "sqs:ReceiveMessage"
            - "sqs:DeleteMessage"
            - "sqs:GetQueueAttributes"
          Resource:
            - arn:aws:sqs:ap-south-1:851725386253:parser-service-dev-queue.fifo
            - arn:aws:sqs:ap-south-1:851725386253:parser-service-prod-queue.fifo
        - Effect: 'Allow'
          Action:
            - "cloudwatch:PutMetricData"
          Resource:
            - "*"


plugins:
  - serverless-offline
  - serverless-domain-manager

custom:
  bucketName: parser-service-uploads
  queueName: parser-service-${sls:stage}-queue.fifo
  secrets: ${ssm:/aws/reference/secretsmanager/parser-service}
  domainName: api.bankstatements2excel.com
  customDomain:
    domainName: ${self:custom.domainName}
    basePath: ${sls:stage}/job-service
    stage: $default
    createRoute53Record: true
    endpointType: REGIONAL
    apiType: http
    # allowPathMatching: true # Only for one deploy
  logLevel:
    dev: debug
    prod: info
    default: info
  dynamodb:
    stages:
      - dev               
    start:
      port: 8000
      inMemory: true
      migrate: true
      heapInitial: 200m
      heapMax: 1g
      convertEmptyValues: true
      seed: true         

  dynamoEndpoint:
    dev: http://localhost:8000   

functions:
  app:
    handler: dist/index.handler
    events:
      - httpApi:
          path: /{proxy+}
          method: ANY
      - httpApi:
          path: /
          method: ANY

package:
  individually: false
  excludeDevDependencies: true
  patterns:
    - '!src/**'
    - '!**/.git/**'
    - '!**/.gitignore'
    - '!**/README.md'
    - '!**/.env.example'
    - '!**/nodemon.json'
    - '!**/jest.config.js'
    - '!**/tsconfig.json'
    - '!**/*.test.ts'
    - '!**/*.spec.ts'
    - '!**/coverage/**'
    - '!**/logs/**'
    - 'dist/**'


resources:
  Resources:
    JobsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: jobs
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
